---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: grafana
  namespace: observability
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 9.2.9
  url: oci://ghcr.io/grafana/helm-charts/grafana
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: observability
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: grafana
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: -1
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
  maxHistory: 3
  values:
    # RATIONALE: The secrets are never exposed in the repository and only in-cluster which requires RBAC
    assertNoLeakedSecrets: false
    replicas: 1
    env:
      GF_EXPLORE_ENABLED: true
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
    grafana.ini:
      server:
        root_url: 'https://grafana.${CLUSTER_DOMAIN}'
      auth.basic:
        disable_login_form: true
      auth.github:
        enabled: true
        allow_sign_up: true
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        allowed_organizations: raspbernetes
        client_id: '${GRAFANA_AUTH_GITHUB_CLIENT_ID}'
        client_secret: '${GRAFANA_AUTH_GITHUB_CLIENT_SECRET}'
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        name: Dex
        client_id: '${GRAFANA_AUTH_GENERIC_CLIENT_ID}'
        client_secret: '${GRAFANA_AUTH_GENERIC_CLIENT_SECRET}'
        scopes: openid profile email groups
        auth_url: 'https://dex.${CLUSTER_DOMAIN}/auth'
        token_url: 'https://dex.${CLUSTER_DOMAIN}/token'
        api_url: 'https://dex.${CLUSTER_DOMAIN}/userinfo'
      auth.generic_oauth.group_mapping:
        role_attribute_path: "contains(groups[*], 'raspbernetes:k8s-admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'"
        org_id: 1
      auth.github.group_mapping:
        role_attribute_path: "contains(groups[*], 'raspbernetes:k8s-admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'"
        org_id: 1
    sidecar:
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090/
            isDefault: true
            # (OPTIONAL) Only required when some dashboards don't correctly set the datasource and you want to override it using the dashboard's uid
            # uid: "Prometheus"
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.observability.svc.cluster.local:80
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.16.5/install/kubernetes/cilium/files/cilium-agent/dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.16.5/install/kubernetes/cilium/files/cilium-agent/dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        cilium-policy-verdict-dashboard:
          # renovate: depName="Cilium Policy Verdict Dashboard"
          gnetId: 18015
          revision: 4
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        gatekeeper-dashboard:
          # renovate: depName="OPA Gatekeeper"
          gnetId: 15763
          revision: 1
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.16.5/examples/kubernetes/addons/prometheus/files/grafana-dashboards/hubble-dashboard.json
          datasource: Prometheus
        # Istio dashboards must be kept in parity with the version deployed
        # https://grafana.com/grafana/dashboards/7639/revisions
        # https://grafana.com/grafana/dashboards/?search=istio
        istio-mesh:
          # renovate: depName="Istio Mesh Dashboard"
          gnetId: 7639
          revision: 260
          datasource: Prometheus
        istio-service:
          # renovate: depName="Istio Service Dashboard"
          gnetId: 7636
          revision: 260
          datasource: Prometheus
        istio-workload:
          # renovate: depName="Istio Workload Dashboard"
          gnetId: 7630
          revision: 260
          datasource: Prometheus
        istio-performence:
          # renovate: depName="Istio Performance Dashboard"
          gnetId: 11829
          revision: 260
          datasource: Prometheus
        istio-control-plane:
          # renovate: depName="Istio Control Plane Dashboard"
          gnetId: 7645
          revision: 260
          datasource: Prometheus
        istio-wasm:
          # renovate: depName="Istio Wasm Extension Dashboard"
          gnetId: 13277
          revision: 249
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 41
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        velero:
          # renovate: depName="Kubernetes / Addons / Velero Stats"
          gnetId: 11055
          revision: 5
          datasource: Prometheus
        velero-stats:
          # renovate: depName="Kubernetes/Tanzu/Velero"
          gnetId: 16829
          revision: 5
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
    persistence:
      enabled: false
